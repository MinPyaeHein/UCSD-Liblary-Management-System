package com.coder.model;
// Generated Aug 10, 2020 11:24:30 AM by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Position generated by hbm2java
 */
@Entity
@Table(name = "position", catalog = "mmhbusin_lmstu")
public class Position implements java.io.Serializable {

	private Integer positionId;
	private String positionName;
	private String shortTerm;
	private Set<Admin> admins = new HashSet<Admin>(0);
	private Set<Teacher> teachers = new HashSet<Teacher>(0);

	public Position() {
	}

	public Position(String positionName, String shortTerm) {
		this.positionName = positionName;
		this.shortTerm = shortTerm;
	}

	public Position(String positionName, String shortTerm, Set<Admin> admins, Set<Teacher> teachers) {
		this.positionName = positionName;
		this.shortTerm = shortTerm;
		this.admins = admins;
		this.teachers = teachers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "position_id", unique = true, nullable = false)
	public Integer getPositionId() {
		return this.positionId;
	}

	public void setPositionId(Integer positionId) {
		this.positionId = positionId;
	}

	@Column(name = "position_name", nullable = false, length = 100)
	public String getPositionName() {
		return this.positionName;
	}

	public void setPositionName(String positionName) {
		this.positionName = positionName;
	}

	@Column(name = "short_term", nullable = false, length = 50)
	public String getShortTerm() {
		return this.shortTerm;
	}

	public void setShortTerm(String shortTerm) {
		this.shortTerm = shortTerm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "position")
	public Set<Admin> getAdmins() {
		return this.admins;
	}

	public void setAdmins(Set<Admin> admins) {
		this.admins = admins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "position")
	public Set<Teacher> getTeachers() {
		return this.teachers;
	}

	public void setTeachers(Set<Teacher> teachers) {
		this.teachers = teachers;
	}

}
