package com.coder.model;
// Generated May 28, 2020 10:14:49 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AcademicYear generated by hbm2java
 */
@Entity
@Table(name = "academic_year", catalog = "mmhbusin_lmstu")
public class AcademicYear implements java.io.Serializable {

	private Integer yearId;
	private Date startYear;
	private Date endYear;
	private Set<Teacher> teachers = new HashSet<Teacher>(0);
	private Set<Student> students = new HashSet<Student>(0);

	public AcademicYear() {
	}

	public AcademicYear(Date startYear, Date endYear) {
		this.startYear = startYear;
		this.endYear = endYear;
	}

	public AcademicYear(Date startYear, Date endYear, Set<Teacher> teachers, Set<Student> students) {
		this.startYear = startYear;
		this.endYear = endYear;
		this.teachers = teachers;
		this.students = students;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "year_id", unique = true, nullable = false)
	public Integer getYearId() {
		return this.yearId;
	}

	public void setYearId(Integer yearId) {
		this.yearId = yearId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_year", nullable = false, length = 10)
	public Date getStartYear() {
		return this.startYear;
	}

	public void setStartYear(Date startYear) {
		this.startYear = startYear;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_year", nullable = false, length = 10)
	public Date getEndYear() {
		return this.endYear;
	}

	public void setEndYear(Date endYear) {
		this.endYear = endYear;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "academicYear")
	public Set<Teacher> getTeachers() {
		return this.teachers;
	}

	public void setTeachers(Set<Teacher> teachers) {
		this.teachers = teachers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "academicYear")
	public Set<Student> getStudents() {
		return this.students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

}
